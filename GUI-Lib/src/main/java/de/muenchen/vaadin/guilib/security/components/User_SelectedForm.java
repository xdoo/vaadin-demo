package de.muenchen.vaadin.guilib.security.components;

import de.muenchen.eventbus.selector.entity.ResponseEntityKey;
import de.muenchen.vaadin.guilib.security.components.buttons.listener.User_SingleActions;
import de.muenchen.vaadin.guilib.security.services.model.User_Datastore;

/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by GAIA.
 */

/**
 * Provides a simple {@link User_Form} that always shows the {@link User_Datastore#getSelectedUser()}.
 *
 * @author p.mueller
 * @version 1.0
 */
public class User_SelectedForm extends User_Form {

    /**
     * Creates a new User_Form that updates its User_ to the {@link User_Datastore#getSelectedUser()}
     * from the Eventbus.
     */
    public User_SelectedForm() {
        getEventBus().on(new ResponseEntityKey(User_Form.ENTITY_CLASS).toSelector(), this::update);
    }
    
    public void reLoad() {
        final User_SingleActions singleActions = new User_SingleActions(this::getUser);
        singleActions.reRead(null);
    }

    /**
     * Update the User_ of this Form to the selected one form the DataStore.
     *
     * @param event
     */
    private void update(reactor.bus.Event<?> event) {
        final User_Datastore data = (User_Datastore) event.getData();
        setUser(data.getSelectedUser().orElse(null));
    }
}
