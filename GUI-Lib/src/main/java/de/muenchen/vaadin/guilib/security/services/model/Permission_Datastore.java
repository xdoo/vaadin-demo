package de.muenchen.vaadin.guilib.security.services.model;

import com.vaadin.data.util.BeanItemContainer;
import de.muenchen.vaadin.demo.apilib.local.Permission;

import java.util.Optional;

/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by GAIA.
 */

/**
 * Provides a simple Model for the Permission_ in the GUI.
 */
public class Permission_Datastore {
    
    /** A List of all the Permission_, possible reduced by the query. */
    private final BeanItemContainer<Permission> permissions = new BeanItemContainer<>(Permission.class);
    
    /** The current (single or none) selected permission in the GUI. */
    private Optional<Permission> selectedPermission= Optional.empty();
    
    /** The query to filter the permission. */
    private Optional<String> query = Optional.empty();

    public Optional<Permission> getSelectedPermission() {
        return selectedPermission;
    }

    /**
     * Set the Selected Permission, if null the Optional will be empty.
     *
     * @param selectedPermission The Permission_ to set as the selected one.
     */
    public void setSelectedPermission(Permission selectedPermission) {
        this.selectedPermission = Optional.ofNullable(selectedPermission);
    }

    public BeanItemContainer<Permission> getPermissions() {
        return permissions;
    }

    public Optional<String> getQuery() {
        return query;
    }

    /**
     * Set the current query.
     *
     * @param query The query.
     */
    public void setQuery(String query) {
        this.query = Optional.ofNullable(query);
    }
}

