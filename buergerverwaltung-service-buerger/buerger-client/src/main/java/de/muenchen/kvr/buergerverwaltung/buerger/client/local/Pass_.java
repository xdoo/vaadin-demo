package de.muenchen.kvr.buergerverwaltung.buerger.client.local;

/*
 * This file will NOT be overwritten by GAIA.
 * This file was automatically generated by GAIA.
 */
import java.util.stream.Stream;

import javax.validation.constraints.NotNull;
import de.muenchen.kvr.buergerverwaltung.buerger.client.domain.Passtyp_;
import org.springframework.hateoas.ResourceSupport;
/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by GAIA.
 */
public class Pass_ extends ResourceSupport {
	
	@NotNull
	private long passNummer;
	
	@NotNull
	private Passtyp_ typ;
	
	@NotNull
	private String kode;
	
	@NotNull
	private long groesse;
	
	@NotNull
	private String behoerde;
	
	public Pass_(){}
	
	/**
     * Create a new Pass_ with the  passNummer, typ, kode, groesse, behoerde.
     *
     * @param passNummer the passNummer of the Pass_.
     * @param typ the typ of the Pass_.
     * @param kode the kode of the Pass_.
     * @param groesse the groesse of the Pass_.
     * @param behoerde the behoerde of the Pass_.
     */
    public Pass_( long passNummer, Passtyp_ typ, String kode, long groesse, String behoerde) {
        this.setPassNummer(passNummer);
        this.setTyp(typ);
        this.setKode(kode);
        this.setGroesse(groesse);
        this.setBehoerde(behoerde);
    }
	
	// Getters and Setters
	public long getPassNummer(){
		return passNummer;
	}
	
	public void setPassNummer(long passNummer){
		this.passNummer = passNummer;
	}
	
	public Passtyp_ getTyp(){
		return typ;
	}
	
	public void setTyp(Passtyp_ typ){
		this.typ = typ;
	}
	
	public String getKode(){
		return kode;
	}
	
	public void setKode(String kode){
		this.kode = kode;
	}
	
	public long getGroesse(){
		return groesse;
	}
	
	public void setGroesse(long groesse){
		this.groesse = groesse;
	}
	
	public String getBehoerde(){
		return behoerde;
	}
	
	public void setBehoerde(String behoerde){
		this.behoerde = behoerde;
	}
	
	 /**
      * A simple Enum for all the Fields of this Pass_.
      * <p>
      *     You can use {@link Field#name()} for the String.
      * </p>
      */
	public enum Field {
        passNummer, typ, kode, groesse, behoerde;

        private final boolean field;

        Field() {
			this(true);
		}

		Field(boolean field) {
			this.field = field;
		}

		public boolean isField() {
			return field;
		}

		public static String[] getProperties() {
			return Stream.of(values()).filter(Field::isField).map(Field::name).toArray(String[]::new);
		}
	}
	
	 /**
	  * A simple Enum for all the Relations ({@link Pass_#getLink(String)} of the Pass_.
	  * <p>
	  *     You can use {@link Rel#name()} for the String.
	  * </p>
	  */
	 public enum Rel {
	 	;
    }
	
	@Override
	public String toString(){
		String s = "";
		s += "long passNummer: " + this.getPassNummer();
		s += "Passtyp_ typ: " + this.getTyp();
		s += "String kode: " + this.getKode();
		s += "long groesse: " + this.getGroesse();
		s += "String behoerde: " + this.getBehoerde();
		return s;
	}
}
