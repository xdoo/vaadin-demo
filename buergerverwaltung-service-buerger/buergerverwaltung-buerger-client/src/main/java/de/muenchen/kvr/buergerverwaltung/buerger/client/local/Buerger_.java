package de.muenchen.kvr.buergerverwaltung.buerger.client.local;

/*
 * This file will NOT be overwritten by GAIA.
 * This file was automatically generated by GAIA.
 */
import de.muenchen.kvr.buergerverwaltung.buerger.client.domain.Augenfarben_;
import de.muenchen.kvr.buergerverwaltung.buerger.client.domain.MoeglicheStaatsangehoerigkeiten_;
import de.muenchen.vaadin.demo.apilib.domain.Past;
import org.springframework.hateoas.ResourceSupport;

import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;
import java.util.List;
import java.util.stream.Stream;
/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by GAIA.
 */
public class Buerger_ extends ResourceSupport {
	
	@NotNull
	private String vorname;
	
	@NotNull
	private String nachname;
	
	@NotNull
	@Past
	private java.time.LocalDate geburtstag;
	
	@NotNull
	private Augenfarben_ augenfarbe;
	
	@NotNull
	@Min((long)10000.0)
	@Max((long)9.99999999E8)
	private long telefonnummer;
	
	@NotNull
	@Pattern(regexp="([a-zA-Z0-9]+.[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z0-9]+)")
	@Size(min=3, max=255)
	private String email;
	
	@NotNull
	private boolean lebendig;
	
	private java.util.List<String> eigenschaften = new java.util.ArrayList<>();
	
	private java.util.List<MoeglicheStaatsangehoerigkeiten_> staatsangehoerigkeiten = new java.util.ArrayList<>();

	@Size(min = 1)
	private List<Adresse_> bisherigeWohnsitze = new java.util.ArrayList<>();
	
	private java.util.List<String> kinder;
	
	private String partner;
	
	private String hauptwohnung;
	
	private java.util.List<String> sachbearbeiter;
	
	private java.util.List<String> pass;
	
	public Buerger_(){}
	
	/**
     * Create a new Buerger_ with the  vorname, nachname, geburtstag, augenfarbe, telefonnummer, email, lebendig, eigenschaften, staatsangehoerigkeiten.
     *
     * @param vorname the vorname of the Buerger_.
     * @param nachname the nachname of the Buerger_.
     * @param geburtstag the geburtstag of the Buerger_.
     * @param augenfarbe the augenfarbe of the Buerger_.
     * @param telefonnummer the telefonnummer of the Buerger_.
     * @param email the email of the Buerger_.
     * @param lebendig the lebendig of the Buerger_.
     * @param eigenschaften the eigenschaften of the Buerger_.
     * @param staatsangehoerigkeiten the staatsangehoerigkeiten of the Buerger_.
     */
    public Buerger_( String vorname, String nachname, java.time.LocalDate geburtstag, Augenfarben_ augenfarbe, long telefonnummer, String email, boolean lebendig, java.util.List<String> eigenschaften, java.util.List<MoeglicheStaatsangehoerigkeiten_> staatsangehoerigkeiten) {
        this.setVorname(vorname);
        this.setNachname(nachname);
        this.setGeburtstag(geburtstag);
        this.setAugenfarbe(augenfarbe);
        this.setTelefonnummer(telefonnummer);
        this.setEmail(email);
        this.setLebendig(lebendig);
        this.setEigenschaften(eigenschaften);
        this.setStaatsangehoerigkeiten(staatsangehoerigkeiten);
    }
	
	// Getters and Setters
	public String getVorname(){
		return vorname;
	}
	
	public void setVorname(String vorname){
		this.vorname = vorname;
	}
	
	public String getNachname(){
		return nachname;
	}
	
	public void setNachname(String nachname){
		this.nachname = nachname;
	}
	
	public java.time.LocalDate getGeburtstag(){
		return geburtstag;
	}
	
	public void setGeburtstag(java.time.LocalDate geburtstag){
		this.geburtstag = geburtstag;
	}
	
	public Augenfarben_ getAugenfarbe(){
		return augenfarbe;
	}
	
	public void setAugenfarbe(Augenfarben_ augenfarbe){
		this.augenfarbe = augenfarbe;
	}
	
	public long getTelefonnummer(){
		return telefonnummer;
	}
	
	public void setTelefonnummer(long telefonnummer){
		this.telefonnummer = telefonnummer;
	}
	
	public String getEmail(){
		return email;
	}
	
	public void setEmail(String email){
		this.email = email;
	}
	
	public boolean isLebendig(){
		return lebendig;
	}
	
	public void setLebendig(boolean lebendig){
		this.lebendig = lebendig;
	}
	
	public java.util.List<String> getEigenschaften(){
		return eigenschaften;
	}
	
	public void setEigenschaften(java.util.List<String> eigenschaften){
		this.eigenschaften = eigenschaften;
	}
	
	public java.util.List<MoeglicheStaatsangehoerigkeiten_> getStaatsangehoerigkeiten(){
		return staatsangehoerigkeiten;
	}
	
	public void setStaatsangehoerigkeiten(java.util.List<MoeglicheStaatsangehoerigkeiten_> staatsangehoerigkeiten){
		this.staatsangehoerigkeiten = staatsangehoerigkeiten;
	}
	
	public List<Adresse_> getBisherigeWohnsitze(){
		return bisherigeWohnsitze;
	}
	public void setBisherigeWohnsitze(List<Adresse_> value){
		this.bisherigeWohnsitze = value;
	}
	
	public java.util.List<String> getKinder(){
		return kinder;
	}
	public void setKinder(java.util.List<String> value){
		this.kinder = value;
	}
	
	public String getPartner(){
		return partner;
	}
	public void setPartner(String value){
		this.partner = value;
	}
	
	public String getHauptwohnung(){
		return hauptwohnung;
	}
	public void setHauptwohnung(String value){
		this.hauptwohnung = value;
	}
	
	public java.util.List<String> getSachbearbeiter(){
		return sachbearbeiter;
	}
	public void setSachbearbeiter(java.util.List<String> value){
		this.sachbearbeiter = value;
	}
	
	public java.util.List<String> getPass(){
		return pass;
	}
	public void setPass(java.util.List<String> value){
		this.pass = value;
	}
	
	 /**
      * A simple Enum for all the Fields of this Buerger_.
      * <p>
      *     You can use {@link Field#name()} for the String.
      * </p>
      */
	public enum Field {
        vorname, nachname, geburtstag, augenfarbe, telefonnummer, email, lebendig, eigenschaften(false), staatsangehoerigkeiten(false), bisherigeWohnsitze(false);

        private final boolean field;

        Field() {
			this(true);
		}

		Field(boolean field) {
			this.field = field;
		}

		public boolean isField() {
			return field;
		}

		public static String[] getProperties() {
			return Stream.of(values()).filter(Field::isField).map(Field::name).toArray(String[]::new);
		}
	}
	
	 /**
	  * A simple Enum for all the Relations ({@link Buerger_#getLink(String)} of the Buerger_.
	  * <p>
	  *     You can use {@link Rel#name()} for the String.
	  * </p>
	  */
	 public enum Rel {
	 	kinder, partner, hauptwohnung, sachbearbeiter, pass;
    }
	
	@Override
	public String toString(){
		String s = "";
		s += "String vorname: " + this.getVorname();
		s += "String nachname: " + this.getNachname();
		s += "java.time.LocalDate geburtstag: " + this.getGeburtstag();
		s += "Augenfarben_ augenfarbe: " + this.getAugenfarbe();
		s += "long telefonnummer: " + this.getTelefonnummer();
		s += "String email: " + this.getEmail();
		s += "boolean lebendig: " + this.isLebendig();
		s += "java.util.List<String> eigenschaften: " + this.getEigenschaften();
		s += "java.util.List<MoeglicheStaatsangehoerigkeiten_> staatsangehoerigkeiten: " + this.getStaatsangehoerigkeiten();
		return s;
	}
}
