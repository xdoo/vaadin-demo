package de.muenchen.kvr.buergerverwaltung.buerger.service.gen.domain;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;	
import javax.persistence.OneToMany;
import javax.persistence.OrderColumn;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Field;
import de.muenchen.service.BaseEntity;
import de.muenchen.service.PetersPerfectBridge;
import de.muenchen.auditing.MUCAudited;

/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by GAIA.
 */
/**
 * This class represents a Wohnung_.
 * <p>
 * Only oid and reference will be stored in the database.
 * The entity's content will be loaded according to the reference variable.
 * </p>
 */
@Entity
@Indexed
@Table(name = "Wohnung")
@MUCAudited({MUCAudited.CREATE, MUCAudited.DELETE, MUCAudited.UPDATE})
public class Wohnung_ extends BaseEntity {
	
	// ========= //
	// Variables //
	// ========= //
	
	@Column(name="stock")
	@Field
	@FieldBridge(impl = PetersPerfectBridge.class)
	@NotNull
	private String stock;
	
	
	@Column(name="ausrichtung")
	@Field
	@FieldBridge(impl = PetersPerfectBridge.class)
	private String ausrichtung;
	
	
	@OrderColumn(name="order_index")
	@JoinTable(name = "Wohnung_Adresse", joinColumns = { @JoinColumn(name = "wohnung_oid")}, inverseJoinColumns = {@JoinColumn(name="adresse_oid")})
	@OneToMany(cascade = {CascadeType.REFRESH})
	@NotNull
	@Size(min = 1)
	private java.util.List<Adresse_> adresse = new java.util.ArrayList<>();
	
	
	/**
	 * Default Constructor for Wohnung.
	 */
	public Wohnung_() {}
	
	// =================== //
	// Getters and Setters //
	// =================== //
	public String getStock(){
		return stock;
	}
	
	public void setStock(String stock){
		this.stock = stock;
	}
	
	
	public String getAusrichtung(){
		return ausrichtung;
	}
	
	public void setAusrichtung(String ausrichtung){
		this.ausrichtung = ausrichtung;
	}
	
	
	public java.util.List<Adresse_> getAdresse(){
		return adresse;
	}
	
	public void setAdresse(java.util.List<Adresse_> adresse){
		this.adresse = adresse;
	}
	
	
	/**
	 * Returns a String representation for this Wohnung.
	 * The form is: 
	 * <EntityName>
	 * <attribute1_Type> <attribute1_name>: <attribute1_value>
	 * <attribute2_Type> <attribute2_name>: <attribute2_value>
	 * ...
	 */
	@Override
	public String toString(){
		String s = "Wohnung";
		s += "\nString stock: " + getStock();
		s += "\nString ausrichtung: " + getAusrichtung();
		s += "\njava.util.List<Adresse_> adresse: " + getAdresse();
		return s;
	}
}
