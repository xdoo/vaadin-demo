package de.muenchen.kvr.buergerverwaltung.buerger.guilib.gen.services.model;

import de.muenchen.vaadin.guilib.util.Datastore;
import com.vaadin.data.util.BeanItemContainer;
import de.muenchen.kvr.buergerverwaltung.buerger.client.local.Adresse_;
import java.util.Optional;

/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by GAIA.
 */
/**
 * Provides a simple Model for the Adresse_ in the GUI.
 */
public class Adresse_Datastore implements Datastore<Adresse_>{
    
    /** A List of all the Adresse_, possible reduced by the query. */
    private final BeanItemContainer<Adresse_> adresses = new BeanItemContainer<>(Adresse_.class);
    
    /** The current (single or none) selected adresse in the GUI. */
    private Optional<Adresse_> selectedAdresse= Optional.empty();
    
    /** The query to filter the adresse. */
    private Optional<String> query = Optional.empty();

    public Optional<Adresse_> getSelectedAdresse() {
        return selectedAdresse;
    }

    /**
     * Set the Selected Adresse, if null the Optional will be empty.
     *
     * @param selectedAdresse The Adresse_ to set as the selected one.
     */
    public void setSelectedAdresse(Adresse_ selectedAdresse) {
        this.selectedAdresse = Optional.ofNullable(selectedAdresse);
    }

    public BeanItemContainer<Adresse_> getAdresses() {
        return adresses;
    }

    public Optional<String> getQuery() {
        return query;
    }

    /**
     * Set the current query.
     *
     * @param query The query.
     */
    public void setQuery(String query) {
        this.query = Optional.ofNullable(query);
    }

	@Override
	public BeanItemContainer<Adresse_> getEntityContainer() {
		return getAdresses();
	}
}

