package de.muenchen.kvr.buergerverwaltung.buerger.guilib.gen.ui.components.entity.sachbearbeiter;

import java.util.List;
import java.util.ArrayList;
import java.util.stream.Collectors;

import org.springframework.hateoas.Link;

import com.vaadin.data.util.BeanItemContainer;
import de.muenchen.eventbus.selector.entity.ResponseEntityKey;
import de.muenchen.kvr.buergerverwaltung.buerger.client.local.Sachbearbeiter_;
import de.muenchen.kvr.buergerverwaltung.buerger.guilib.gen.ui.components.buttons.listener.sachbearbeiter.Sachbearbeiter_SingleActions;
import de.muenchen.kvr.buergerverwaltung.buerger.guilib.gen.services.model.Sachbearbeiter_Datastore;

/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by GAIA.
 */
/**
 * Provides a simple {@link Sachbearbeiter_Form} that always shows the {@link Sachbearbeiter_Datastore#getSelectedSachbearbeiter()}.
 *
 * @author p.mueller
 * @version 1.0
 */
public class Sachbearbeiter_SelectedForm extends Sachbearbeiter_Form {

    /**
     * Creates a new Sachbearbeiter_Form that updates its Sachbearbeiter_ to the {@link Sachbearbeiter_Datastore#getSelectedSachbearbeiter()}
     * from the Eventbus.
     */
    public Sachbearbeiter_SelectedForm() {
        getEventBus().on(new ResponseEntityKey(Sachbearbeiter_Form.ENTITY_CLASS).toSelector(), this::update);
    }
    
    public void reLoad() {
        final Sachbearbeiter_SingleActions singleActions = new Sachbearbeiter_SingleActions(this::getSachbearbeiter);
        singleActions.reRead(null);
    }

    /**
     * Update the Sachbearbeiter_ of this Form to the selected one form the DataStore.
     *
     * @param event
     */
    private void update(reactor.bus.Event<?> event) {
        final Sachbearbeiter_Datastore data = (Sachbearbeiter_Datastore) event.getData();
        Sachbearbeiter_ sachbearbeiter = data.getSelectedSachbearbeiter().orElse(null);
        if(sachbearbeiter != null){
			setSachbearbeiter(sachbearbeiter);
		}
    }
}
