package de.muenchen.kvr.buergerverwaltung.buerger.guilib.gen.ui.components.entity.adresse;

import java.util.List;
import java.util.ArrayList;
import java.util.stream.Collectors;

import org.springframework.hateoas.Link;

import com.vaadin.data.util.BeanItemContainer;
import de.muenchen.eventbus.selector.entity.ResponseEntityKey;
import de.muenchen.kvr.buergerverwaltung.buerger.client.local.Adresse_;
import de.muenchen.kvr.buergerverwaltung.buerger.guilib.gen.ui.components.buttons.listener.adresse.Adresse_SingleActions;
import de.muenchen.kvr.buergerverwaltung.buerger.guilib.gen.services.model.Adresse_Datastore;

/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by GAIA.
 */
/**
 * Provides a simple {@link Adresse_Form} that always shows the {@link Adresse_Datastore#getSelectedAdresse()}.
 *
 * @author p.mueller
 * @version 1.0
 */
public class Adresse_SelectedForm extends Adresse_Form {

    /**
     * Creates a new Adresse_Form that updates its Adresse_ to the {@link Adresse_Datastore#getSelectedAdresse()}
     * from the Eventbus.
     */
    public Adresse_SelectedForm() {
        getEventBus().on(new ResponseEntityKey(Adresse_Form.ENTITY_CLASS).toSelector(), this::update);
    }
    
    public void reLoad() {
        final Adresse_SingleActions singleActions = new Adresse_SingleActions(this::getAdresse);
        singleActions.reRead(null);
    }

    /**
     * Update the Adresse_ of this Form to the selected one form the DataStore.
     *
     * @param event
     */
    private void update(reactor.bus.Event<?> event) {
        final Adresse_Datastore data = (Adresse_Datastore) event.getData();
        Adresse_ adresse = data.getSelectedAdresse().orElse(null);
        if(adresse != null){
			setAdresse(adresse);
		}
    }
}
