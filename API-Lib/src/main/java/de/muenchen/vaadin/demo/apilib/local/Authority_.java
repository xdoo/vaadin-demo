package de.muenchen.vaadin.demo.apilib.local;

/*
 * This file will NOT be overwritten by GAIA.
 * This file was automatically generated by GAIA.
 */

import org.springframework.hateoas.ResourceSupport;

import javax.validation.constraints.NotNull;
import java.util.stream.Stream;

/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by GAIA.
 */
public class Authority_ extends ResourceSupport {
	
	@NotNull
	private String authority;
	
	public Authority_(){}
	
	/**
     * Create a new Authority_ with the  authority.
     *
     * @param authority the authority of the Authority_.
     */
    public Authority_(String authority) {
        this.setAuthority(authority);
    }
	
	// Getters and Setters
	public String getAuthority(){
		return authority;
	}
	
	public void setAuthority(String authority){
		this.authority = authority;
	}
	
	 /**
      * A simple Enum for all the Fields of this Authority_.
      * <p>
      *     You can use {@link Field#name()} for the String.
      * </p>
      */
	public enum Field {
        authority;

        private final boolean field;

        Field() {
			this(true);
		}

		Field(boolean field) {
			this.field = field;
		}

		public boolean isField() {
			return field;
		}

		public static String[] getProperties() {
			return Stream.of(values()).filter(Field::isField).map(Field::name).toArray(String[]::new);
		}
	}
	
	 /**
	  * A simple Enum for all the Relations ({@link Authority_#getLink(String)} of the Authority_.
	  * <p>
	  *     You can use {@link Rel#name()} for the String.
	  * </p>
	  */
	 public enum Rel {
	 	permissions;
    }
	
	@Override
	public String toString(){
		String s = "";
		s += "String authority: " + this.getAuthority();
		return s;
	}
}
