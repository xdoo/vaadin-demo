package de.muenchen.demo.service.gen.controller;

import de.muenchen.demo.service.gen.domain.Wohnung;
import de.muenchen.demo.service.gen.services.WohnungEventService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.rest.core.event.AbstractRepositoryEventListener;
import org.springframework.stereotype.Component;

/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by GAIA.
 */

/**
 * This event-listener allows a WohnungEventService to implement logic before and after Events.
 */
@Component
public class WohnungEventListener extends AbstractRepositoryEventListener<Wohnung> {
    @Autowired
    WohnungEventService service;

    @Override
    protected void onAfterCreate(Wohnung entity) {
        service.onAfterCreate(entity);
    }

    @Override
    protected void onBeforeCreate(Wohnung entity) {
        service.onBeforeCreate(entity);
    }

    @Override
    protected void onBeforeSave(Wohnung entity) {
        service.onBeforeSave(entity);
    }

    @Override
    protected void onAfterSave(Wohnung entity) {
        service.onAfterSave(entity);
    }

    @Override
    protected void onBeforeLinkSave(Wohnung parent, Object linked) {
        service.onBeforeLinkSave(parent, linked);
    }

    @Override
    protected void onAfterLinkSave(Wohnung parent, Object linked) {
        service.onAfterLinkSave(parent, linked);
    }

    @Override
    protected void onBeforeLinkDelete(Wohnung parent, Object linked) {
        service.onBeforeLinkDelete(parent, linked);
    }

    @Override
    protected void onBeforeDelete(Wohnung entity) {
        service.onBeforeDelete(entity);
    }

    @Override
    protected void onAfterDelete(Wohnung entity) {
        service.onAfterDelete(entity);
    }

    @Override
    protected void onAfterLinkDelete(Wohnung parent, Object linked) {
        service.onAfterLinkDelete(parent, linked);
    }
}
