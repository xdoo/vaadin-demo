package de.muenchen.kvr.buergerverwaltung.buerger.client.local;

/*
 * This file will NOT be overwritten by GAIA.
 * This file was automatically generated by GAIA.
 */
import java.util.stream.Stream;

import javax.validation.constraints.NotNull;
import org.springframework.hateoas.ResourceSupport;
/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by GAIA.
 */
public class AdresseExtern_ extends ResourceSupport {
	
	@NotNull
	private String strasse;
	
	@NotNull
	private long hausnummer;
	
	@NotNull
	private long plz;
	
	@NotNull
	private String ort;
	
	public AdresseExtern_(){}
	
	/**
     * Create a new AdresseExtern_ with the  strasse, hausnummer, plz, ort.
     *
     * @param strasse the strasse of the AdresseExtern_.
     * @param hausnummer the hausnummer of the AdresseExtern_.
     * @param plz the plz of the AdresseExtern_.
     * @param ort the ort of the AdresseExtern_.
     */
    public AdresseExtern_( String strasse, long hausnummer, long plz, String ort) {
        this.setStrasse(strasse);
        this.setHausnummer(hausnummer);
        this.setPlz(plz);
        this.setOrt(ort);
    }
	
	// Getters and Setters
	public String getStrasse(){
		return strasse;
	}
	
	public void setStrasse(String strasse){
		this.strasse = strasse;
	}
	
	public long getHausnummer(){
		return hausnummer;
	}
	
	public void setHausnummer(long hausnummer){
		this.hausnummer = hausnummer;
	}
	
	public long getPlz(){
		return plz;
	}
	
	public void setPlz(long plz){
		this.plz = plz;
	}
	
	public String getOrt(){
		return ort;
	}
	
	public void setOrt(String ort){
		this.ort = ort;
	}
	
	 /**
      * A simple Enum for all the Fields of this AdresseExtern_.
      * <p>
      *     You can use {@link Field#name()} for the String.
      * </p>
      */
	public enum Field {
        strasse, hausnummer, plz, ort;

        private final boolean field;

        Field() {
			this(true);
		}

		Field(boolean field) {
			this.field = field;
		}

		public boolean isField() {
			return field;
		}

		public static String[] getProperties() {
			return Stream.of(values()).filter(Field::isField).map(Field::name).toArray(String[]::new);
		}
	}
	
	 /**
	  * A simple Enum for all the Relations ({@link AdresseExtern_#getLink(String)} of the AdresseExtern_.
	  * <p>
	  *     You can use {@link Rel#name()} for the String.
	  * </p>
	  */
	 public enum Rel {
	 	;
    }
	
	@Override
	public String toString(){
		String s = "";
		s += "String strasse: " + this.getStrasse();
		s += "long hausnummer: " + this.getHausnummer();
		s += "long plz: " + this.getPlz();
		s += "String ort: " + this.getOrt();
		return s;
	}
}
